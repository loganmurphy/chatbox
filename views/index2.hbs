<title>{{title}}</title>

<video id="myVideo" class="video-js vjs-default-skin"></video>
<button id='send_video'>Share your video!</button>

<!-- <canvas id='canvas' width="340" height="240" style="border: 1px solid black;"></canvas> -->
<button id='send_picture'>Share your drawing!</button>

<ul id="messages"></ul>
<form>
  <input id="m" autocomplete="off" placeholder="enter your message"><button>Send a message</button>
<button id='make_video'>Add a video message</button>
<button id='draw_picture'>Draw a picture</button>
</form>

<style>
   body { font: 13px Helvetica, Arial; }
  #messages { list-style-type: none; margin: 0; padding: 0; }
  #messages li { padding: 5px 10px; }
  #messages li:nth-child(odd) { background: #eee; width: 75%;}
</style>

<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<script>
  $(function () {
    var socket = io();
    $('form').submit(function(){
      socket.emit('chat message', $('#m').val());
      $('#m').val('');
      return false;
    });
    socket.on('chat message', function(msg){
      $('#messages').append($('<li>').text(msg));
    });
  });
</script>
<script>
var player = videojs("myVideo", {
    controls: true,
    width: 320,
    height: 240,
    fluid: false,
    plugins: {
        record: {
            audio: true,
            video: true,
            maxLength: 10,
            debug: true
        }
    }
});
// error handling
player.on('deviceError', function() {
    console.log('device error:', player.deviceErrorCode);
});

player.on('error', function(error) {
    console.log('error:', error);
});

// user clicked the record button and started recording
player.on('startRecord', function() {
    console.log('started recording!');
});

// user completed recording and stream is available
player.on('finishRecord', function() {
    // the blob object contains the recorded data that
    // can be downloaded by the user, stored on server etc.
    console.log('finished recording: ', player.recordedData);
    // Try to save
    var blob = player.recordedData;
    var vid_src = blob.video.name;
    var v = document.createElement('video');
    v.src = window.URL.createObjectURL(blob.video);
    $('#send_video').show();
    $('#send_video').click(function(){
      $('#messages').append(v);
      var play = false;
      $('video').click(function() {
        $('#myVideo').hide();
        $('#send_video').hide();
        $('#make_video').text('Add a video message');
        play = !play
        if(play == true){
          v.loop = true;
          v.play();
        } else {
          v.loop == false;
          v.pause();
        }
      });


  });
    // var blob = player.record().saveAs({'video': 'my-video-file-name.webm'});
    // add_vid(blob)
});
</script>
<script>
$('document').ready(function(){
  var show_vid= false;
  var show_pic= false;
  $('#make_video').click(function(event){
    event.preventDefault();
    if (show_vid == false){
    $('#make_video').text('Never mind');
    $('#myVideo').show();
    return show_vid = true;
  } else {
    $('#make_video').text('Add a video message');
    $('#myVideo').hide();
    return show_vid = false;
  }
  });
  $('#draw_picture').click(function(event){
    event.preventDefault();
    if (show_pic == false){
    $('#draw_picture').text('Never mind');
    $('#canvas').show();
    return show_pic = true;
  } else {
    $('#draw_picture').text('Draw a picture');
    $('#canvas').hide();
    return show_pic = false;
  }
  });
});
</script>
<canvas width="340" height="240" style="border: 1px solid black;"></canvas>

<script src="/socket-io/socket.io.js"></script>
<script>
  var server = io();
  var canvas = document.querySelector('canvas');
  var ctx = canvas.getContext('2d');

  var mouse_down = false;
  var past;
  var current;

  canvas.addEventListener('mousedown', function (event) {
    mouse_down = true;
    console.log('down', event.offsetX, event.offsetY);
  });
  canvas.addEventListener('mouseup', function (event) {
    mouse_down = false;
    past = null;
    console.log('up', event.offsetX, event.offsetY);
  });
  canvas.addEventListener('mousemove', function (event) {
    if (mouse_down) {
      console.log('move', event.offsetX, event.offsetY);

      current = [event.offsetX, event.offsetY];
      if (past) {
        send_draw(past, current);
      }

      past = [event.offsetX, event.offsetY];
    }
  });

  function send_draw (past, current) {
    server.emit('draw', [past, current]);
  }

  server.on('do-draw', function (coords) {
    draw(coords[0], coords[1]);
  });

  function draw (past, current) {
    ctx.moveTo(past[0], past[1]);
    ctx.quadraticCurveTo(
      past[0], past[1],
      current[0], current[1]
    );
    ctx.stroke();
    ctx.closePath();
  }
</script>
